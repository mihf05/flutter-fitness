name: Release Multi-Platform Apps

# Trigger on push to main branch
on:
  push:
    branches: [ main ]

jobs:
  # Build Android
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '11'
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
      
      - name: Get Flutter Dependencies
        run: flutter pub get
      
      - name: Build Android APK
        run: flutter build apk --release
      
      - name: Build Android AAB
        run: flutter build appbundle --release
      
      - name: Upload Android Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-release
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab

  # Build iOS
  build-ios:
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
      
      - name: Get Flutter Dependencies
        run: flutter pub get
      
      - name: Build iOS
        run: flutter build ios --release --no-codesign
      
      - name: Create iOS IPA
        run: |
          cd build/ios/iphoneos
          mkdir -p Payload
          cp -r Runner.app Payload/
          zip -r ../../../ios-release.ipa Payload/
      
      - name: Upload iOS Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ios-release
          path: ios-release.ipa

  # Build Windows
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
      
      - name: Get Flutter Dependencies
        run: flutter pub get
      
      - name: Enable Windows Desktop
        run: flutter config --enable-windows-desktop
      
      - name: Create Windows Platform Files
        run: |
          if (!(Test-Path "windows")) {
            flutter create --platforms=windows .
          }
        shell: powershell
      
      - name: Build Windows
        run: flutter build windows --release
      
      - name: Create Windows Package
        run: |
          Compress-Archive -Path "build\windows\x64\runner\Release\*" -DestinationPath "windows-release.zip"
        shell: powershell
      
      - name: Upload Windows Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-release
          path: windows-release.zip

  # Create GitHub Release
  create-release:
    needs: [build-android, build-ios, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Get App Version
        id: get_version
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | cut -d' ' -f2 | cut -d'+' -f1)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "App version: $VERSION"
      
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./releases
      
      - name: Display Downloaded Files
        run: find ./releases -type f -ls
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.version }}-build-${{ github.run_number }}
          name: "GymApp v${{ steps.get_version.outputs.version }} - Build ${{ github.run_number }}"
          body: |
            ðŸš€ **Automated Release for GymApp**
            
            Version: `${{ steps.get_version.outputs.version }}`
            Build: `${{ github.run_number }}`
            Commit: `${{ github.sha }}`
            
            ## ðŸ“± Downloads
            
            - **Android APK**: For direct installation on Android devices
            - **Android AAB**: For Google Play Store submission  
            - **iOS IPA**: For iOS devices (unsigned - requires code signing)
            - **Windows ZIP**: For Windows desktop installation
            
            ## ðŸ“‹ Installation
            
            ### Android
            Download the APK file and install directly on your Android device.
            
            ### Windows  
            Download and extract the ZIP file, then run the executable.
            
            ### iOS
            The IPA file is unsigned. You'll need to sign it with your Apple Developer certificate for device installation.
          files: |
            releases/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
